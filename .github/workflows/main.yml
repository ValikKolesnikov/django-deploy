name: Continuous Integration and Delivery

on: [push]

env:
  BACKEND_IMAGE: docker.pkg.github.com/behumb/django-deploy/elearning_app
  NGINX_IMAGE: docker.pkg.github.com/behumb/django-deploy/nginx
  FRONTEND_IMAGE: docker.pkg.github.com/behumb/django-deploy/frontend

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
      - name: Add environment variables to .env.prod
        run: |
          mkdir .envs
          echo DJANGO_SECRET_KEY="${{ secrets.DJANGO_SECRET_KEY }}" >> .envs/.env.prod
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .envs/.env.prod
          echo DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }} >> .envs/.env.prod
      - name: Set environment variables
        run: |
          echo "BACKEND_IMAGE=${{ env.BACKEND_IMAGE }}" >> $GITHUB_ENV
          echo "NGINX_IMAGE=${{ env.NGINX_IMAGE }}" >> $GITHUB_ENV
          echo "FRONTEND_IMAGE=${{ env.FRONTEND_IMAGE }}" >> $GITHUB_ENV
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
      - name: Pull images
        run: |
          docker pull ${{ env.BACKEND_IMAGE }} || true
          docker pull ${{ env.NGINX_IMAGE }} || true
          docker pull ${{ env.FRONTEND_IMAGE }} || true
      - name: Build images
        run: |
          docker-compose -f docker-compose.ci.yml build
      - name: Push images
        run: |
          docker push ${{ env.BACKEND_IMAGE }}
          docker push ${{ env.NGINX_IMAGE }}
          docker push ${{ env.FRONTEND_IMAGE }}

  deploy:
      name: Deploy to DigitalOcean
      runs-on: ubuntu-latest
      needs: build
      if: github.ref == 'refs/heads/master'
      steps:
        - name: Checkout master
          uses: actions/checkout@v2
        - name: Add environment variables to .env
          run: |
            mkdir .envs
            echo DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} >> .envs/.env.prod
            echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .envs/.env.prod
            echo DJANGO_ALLOWED_HOSTS="${{ secrets.DJANGO_ALLOWED_HOSTS }}" >> .envs/.env.prod
            echo BACKEND_IMAGE=${{ env.BACKEND_IMAGE }} >> .envs/.env.prod
            echo NGINX_IMAGE=${{ env.NGINX_IMAGE }} >> .envs/.env.prod
            echo FRONTEND_IMAGE=${{ env.FRONTEND_IMAGE }} >> .envs/.env.prod
        - name: Add the private SSH key to the ssh-agent
          env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          run: |
            mkdir -p ~/.ssh
            ssh-agent -a $SSH_AUTH_SOCK > /dev/null
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            ssh-add - <<< "${{ secrets.PRIVATE_KEY }}"
        - name: Build and deploy images on DigitalOcean
          env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          run: |
            scp  -o StrictHostKeyChecking=no -r .envs/ ./docker-compose.prod.yml root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:./app
            ssh -o StrictHostKeyChecking=no root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} << 'ENDSSH'
              cd ./app
              source .envs/.env.prod
              docker login docker.pkg.github.com -u behumb -p "${{ secrets.PACKAGE_TOKEN }}"
              docker pull $BACKEND_IMAGE
              docker pull $NGINX_IMAGE
              docker pull $FRONTEND_IMAGE
              docker-compose -f docker-compose.prod.yml up -d
            ENDSSH